clc;
clear all;
close all;
I=imread('/MATLAB Drive/ELIZA.bmp');
subplot(2,2,1);
imshow(I);
title("Original Image");
J=imnoise(I,'salt & pepper',0.05);
subplot(2,2,2);
imshow(J);
title('Adding Noise');
K=(1/16)*[1 2 1;2 4 2;1 2 1];
L=imfilter(J,K);
subplot(2,2,3);
imshow(L);
title('Weighted Average Filter');
M=medfilt2(J,[3,3]);
subplot(2,2,4);
imshow(M);
title('Median Filter');
figure(2);
N=[-1 -1 -1;-1 8 -1;-1 -1 -1];
O=imfilter(I,N);
subplot(2,2,1);
imshow(O);
title('Laplacian Filter');
im1=im2double(I);
[m,n]=size(I);
im_Rx(m,n)=0;
im_Ry(m,n)=0;
for i=1:m-2
for j=1:n-2
ims_Rx(i,j)=((-1)*im1(i,j))+0+((1)*im1(i,j+2))+((-2)*im1(i+1,j))+0+((2)*im1(i+1,j+2))+
((-1)*im1(i+2,j))+0+((1)*im1(i+2,j+2));
end
end
subplot(2,2,2);
imshow(ims_Rx);
title('Gy(Sobels Filter)');
for i=1:m-2
for j=1:n-2
ims_Ry(i,j)=((-1)*im1(i,j))+((-2)*im1(i,j+1))+((-1)*im1(i,j+2))+0+0+0+((1)*im1(i+2,j))+
((2)*im1(i+2,j+1))+((1)*im1(i+2,j+2));
end
end
subplot(2,2,3);
imshow(ims_Ry);
title('Gx(Sobels Filter)');
Gs=ims_Rx+ims_Ry;
subplot(2,2,4);

imshow(Gs);
title('Gs(Sobels Filter)');





%{
CONCLUSION:-
1. We used weighted average filter and median filter for smoothing the image and removing noise.
2. Median filter is best for removing salt and pepper noise.
3. Laplacian filter and Sobel has been used for edge detection.
4. Sobel filter detects wider edges than laplacian filter.
}%
